version: '2'

volumes:
  mongo-data:

services:
  mongo:
    image: mongo:4.0.8-xenial
    ports:
      - 0.0.0.0:27017:27017
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db

  omniboard:
    image: vivekratnavel/omniboard:1.7.1
    command: ["-m", "mongo:27017:lvk"]
    environment:
      - NODE_OPTIONS=--max-old-space-size=4096
    ports:
      - 0.0.0.0:9000:9000
    restart: unless-stopped
    depends_on:
      - mongo

  compute:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    # HACK: run /bin/sh in the background to avoid accidentally
    # exiting the container
    command: ["/bin/sh"]
    tty: true
    stdin_open: true
    volumes:
      - ../meshes:/home/fenics/lvk/meshes
      - ../output:/home/fenics/lvk/output
      - ../src:/home/fenics/lvk/src
    depends_on:
      - mongo

  notebooks:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: ["fenics-notebook"]
    volumes:
      - ../meshes:/home/fenics/lvk/meshes
      - ../output:/home/fenics/lvk/output
      - ../src:/home/fenics/lvk/src
    ports:
      - 0.0.0.0:8888:8888
    depends_on:
      - mongo

  reports:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    # entrypoint: ["/bin/bash", "-c"]
    command: ["flask run -h 0.0.0.0 -p 8080"]
    environment:
      - FLASK_APP=/home/fenics/lvk/src/report.py
      - FLASK_ENV=production
    volumes:
      - ../meshes:/home/fenics/lvk/meshes
      - ../output:/home/fenics/lvk/output
      - ../src:/home/fenics/lvk/src    
    ports:
      - 0.0.0.0:8080:8080
    depends_on:
      - mongo
